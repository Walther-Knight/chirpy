// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_refresh_token.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const getUserFromRefreshToken = `-- name: GetUserFromRefreshToken :one
SELECT expires_at, user_id, revoked_at
FROM refresh_tokens
WHERE token = $1
`

type GetUserFromRefreshTokenRow struct {
	ExpiresAt time.Time
	UserID    uuid.UUID
	RevokedAt sql.NullTime
}

func (q *Queries) GetUserFromRefreshToken(ctx context.Context, token string) (GetUserFromRefreshTokenRow, error) {
	row := q.db.QueryRowContext(ctx, getUserFromRefreshToken, token)
	var i GetUserFromRefreshTokenRow
	err := row.Scan(&i.ExpiresAt, &i.UserID, &i.RevokedAt)
	return i, err
}
